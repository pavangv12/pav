{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"value\", \"slotProps\", \"slots\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport useTabPanel from '../useTabPanel/useTabPanel';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var hidden = ownerState.hidden;\n  var slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTabPanelUtilityClass));\n};\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Tabs](https://mui.com/base/react-tabs/)\r\n *\r\n * API:\r\n *\r\n * - [TabPanel API](https://mui.com/base/react-tabs/components-api/#tab-panel)\r\n */\nvar TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(props, forwardedRef) {\n  var _slots$root;\n  var children = props.children,\n    _props$slotProps = props.slotProps,\n    slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n    _props$slots = props.slots,\n    slots = _props$slots === void 0 ? {} : _props$slots,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  var _useTabPanel = useTabPanel(props),\n    hidden = _useTabPanel.hidden,\n    getRootProps = _useTabPanel.getRootProps;\n  var ownerState = _extends({}, props, {\n    hidden: hidden\n  });\n  var classes = useUtilityClasses(ownerState);\n  var TabPanelRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\n  var tabPanelRootProps = useSlotProps({\n    elementType: TabPanelRoot,\n    getSlotProps: getRootProps,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      role: 'tabpanel',\n      ref: forwardedRef\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({}, tabPanelRootProps, {\n    children: !hidden && children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n  /**\r\n   * The props used for each slot inside the TabPanel.\r\n   * @default {}\r\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\r\n   * The components used for each slot inside the TabPanel.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\r\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\r\n   * If not provided, it will fall back to the index of the panel.\r\n   * It is recommended to explicitly provide it, as it's required for the tab panel to be rendered on the server.\r\n   */\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TabPanel;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","useSlotProps","composeClasses","getTabPanelUtilityClass","useTabPanel","useClassNamesOverride","jsx","_jsx","useUtilityClasses","ownerState","hidden","slots","root","TabPanel","forwardRef","props","forwardedRef","_slots$root","children","_props$slotProps","slotProps","_props$slots","other","_useTabPanel","getRootProps","classes","TabPanelRoot","tabPanelRootProps","elementType","getSlotProps","externalSlotProps","externalForwardedProps","additionalProps","role","ref","className","process","env","NODE_ENV","propTypes","node","shape","oneOfType","func","object","value","number","string"],"sources":["C:/src/pav/node_modules/@mui/base/TabPanel/TabPanel.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"children\", \"value\", \"slotProps\", \"slots\"];\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSlotProps } from '../utils';\r\nimport composeClasses from '../composeClasses';\r\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\r\nimport useTabPanel from '../useTabPanel/useTabPanel';\r\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst useUtilityClasses = ownerState => {\r\n  const {\r\n    hidden\r\n  } = ownerState;\r\n  const slots = {\r\n    root: ['root', hidden && 'hidden']\r\n  };\r\n  return composeClasses(slots, useClassNamesOverride(getTabPanelUtilityClass));\r\n};\r\n/**\r\n *\r\n * Demos:\r\n *\r\n * - [Tabs](https://mui.com/base/react-tabs/)\r\n *\r\n * API:\r\n *\r\n * - [TabPanel API](https://mui.com/base/react-tabs/components-api/#tab-panel)\r\n */\r\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(props, forwardedRef) {\r\n  var _slots$root;\r\n  const {\r\n      children,\r\n      slotProps = {},\r\n      slots = {}\r\n    } = props,\r\n    other = _objectWithoutPropertiesLoose(props, _excluded);\r\n  const {\r\n    hidden,\r\n    getRootProps\r\n  } = useTabPanel(props);\r\n  const ownerState = _extends({}, props, {\r\n    hidden\r\n  });\r\n  const classes = useUtilityClasses(ownerState);\r\n  const TabPanelRoot = (_slots$root = slots.root) != null ? _slots$root : 'div';\r\n  const tabPanelRootProps = useSlotProps({\r\n    elementType: TabPanelRoot,\r\n    getSlotProps: getRootProps,\r\n    externalSlotProps: slotProps.root,\r\n    externalForwardedProps: other,\r\n    additionalProps: {\r\n      role: 'tabpanel',\r\n      ref: forwardedRef\r\n    },\r\n    ownerState,\r\n    className: classes.root\r\n  });\r\n  return /*#__PURE__*/_jsx(TabPanelRoot, _extends({}, tabPanelRootProps, {\r\n    children: !hidden && children\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\r\n  // ----------------------------------------------------------------------\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n  /**\r\n   * The props used for each slot inside the TabPanel.\r\n   * @default {}\r\n   */\r\n  slotProps: PropTypes.shape({\r\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n  }),\r\n  /**\r\n   * The components used for each slot inside the TabPanel.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  slots: PropTypes.shape({\r\n    root: PropTypes.elementType\r\n  }),\r\n  /**\r\n   * The value of the TabPanel. It will be shown when the Tab with the corresponding value is selected.\r\n   * If not provided, it will fall back to the index of the panel.\r\n   * It is recommended to explicitly provide it, as it's required for the tab panel to be rendered on the server.\r\n   */\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n} : void 0;\r\nexport default TabPanel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}